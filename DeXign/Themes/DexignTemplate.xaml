<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:DeXign.Controls">

    <!--  TopLevelHeader  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type c:MenuItemEx}">
        <Border Name="Border">
            <Grid>
                <ContentPresenter
                    Margin="8"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup
                    x:Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Bottom"
                    PopupAnimation="Fade">
                    <Border
                        x:Name="SubmenuBorder"
                        Background="White"
                        BorderBrush="{StaticResource Brush.Menu.Border}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Menu.Hover}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Flat.Accent.DeepDark}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  TopLevelItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type c:MenuItemEx}">
        <Border Name="Border">
            <Grid>
                <ContentPresenter
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    TextBlock.Foreground="{StaticResource Brush.Menu.Item.Foreground}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Red" />
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <!--<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type c:MenuItemEx}">
        <Border Name="Border">
            <Grid Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" SharedSizeGroup="Header" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Arrow" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <Border
                    x:Name="Check"
                    Width="13"
                    Height="13"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    Background="Red"
                    BorderBrush="Cyan"
                    BorderThickness="1"
                    Visibility="Collapsed">
                    <Path
                        x:Name="CheckMark"
                        Width="7"
                        Height="7"
                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                        SnapsToDevicePixels="False"
                        Stroke="Orange"
                        StrokeThickness="2"
                        Visibility="Hidden" />
                </Border>
                <TextBlock
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Text="{TemplateBinding Header}"
                    TextBlock.Foreground="{StaticResource Brush.Menu.Item.Foreground}" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="16,0,0,0"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}"
                    TextBlock.Foreground="{StaticResource Brush.Menu.Item.Foreground}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Menu.Item.Selected.Background}" />
                <Setter TargetName="HeaderHost" Property="TextBlock.Foreground" Value="{StaticResource Brush.Menu.Item.Selected.Foreground}" />
                <Setter TargetName="InputGestureText" Property="Foreground" Value="{StaticResource Brush.Menu.Item.Selected.Foreground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuHeader  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type c:MenuItemEx}">
        <Border Name="Border">
            <Grid Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" SharedSizeGroup="Header" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Arrow" />
                </Grid.ColumnDefinitions>

                <ContentPresenter
                    x:Name="Icon"
                    Margin="6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />

                <TextBlock
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Text="{TemplateBinding Header}"
                    TextBlock.Foreground="{StaticResource Brush.Menu.Item.Foreground}" />

                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="16,0,0,0"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    Foreground="{StaticResource Brush.Menu.Item.Foreground}"
                    Text="{TemplateBinding InputGestureText}" />

                <Path
                    x:Name="ArrowPath"
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{StaticResource Brush.Menu.Item.Foreground}" />

                <Popup
                    x:Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PlacementTarget="{Binding ElementName=Border}"
                    PopupAnimation="Fade">
                    <Border
                        x:Name="SubmenuBorder"
                        Background="White"
                        BorderBrush="{StaticResource Brush.Menu.Border}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Menu.Item.Selected.Background}" />
                <Setter TargetName="HeaderHost" Property="TextBlock.Foreground" Value="{StaticResource Brush.Menu.Item.Selected.Foreground}" />
                <Setter TargetName="InputGestureText" Property="Foreground" Value="{StaticResource Brush.Menu.Item.Selected.Foreground}" />
                <Setter TargetName="ArrowPath" Property="Fill" Value="{StaticResource Brush.Menu.Item.Selected.Foreground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>