<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ec="clr-namespace:DeXign.Editor.Controls"
                    xmlns:el="clr-namespace:DeXign.Editor.Logic"
                    xmlns:c="clr-namespace:DeXign.Controls">

    <Style TargetType="{x:Type ec:Storyboard}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource AncestorType=Storyboard}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ec:StoryboardZoomPanel}" BasedOn="{StaticResource {x:Type c:ZoomPanel}}"/>

    <Style TargetType="{x:Type c:RelativeThumb}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:RelativeThumb}">
                    <Rectangle Fill="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ec:LayerMoveThumb}" BasedOn="{StaticResource {x:Type c:RelativeThumb}}"/>

    <Style TargetType="{x:Type ec:LayerResizeThumb}">
        <Setter Property="Width" Value="5"/>
        <Setter Property="Height" Value="5"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Stroke" Value="Red"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ec:LayerResizeThumb}">
                    <Rectangle x:Name="rect" Fill="{TemplateBinding Background}" StrokeThickness="1" Stroke="{TemplateBinding Stroke}"/>
                     <ControlTemplate.Triggers>
                         <Trigger Property="IsDragging" Value="True">
                             <Setter TargetName="rect" Property="Fill" Value="{Binding Stroke, RelativeSource={RelativeSource AncestorType={x:Type ec:LayerResizeThumb}}}"/>
                         </Trigger>
                     </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ec:LayerMarginClip}">
        <Setter Property="Width" Value="7"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#424242"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ec:LayerMarginClip}">
                    <Grid Background="Transparent">
                        <c:StrokePath x:Name="path" Data="{StaticResource Path.Chain.Disconnected}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Background}" StrokeThickness="2" Stretch="Uniform"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="path" Property="Data" Value="{StaticResource Path.Chain.Connected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ec:LayerEventTriggerButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ec:LayerEventTriggerButton}">
                    <Grid>
                        <Path x:Name="path" Data="{StaticResource Path.HalfMoon}" Width="10" Height="15" Fill="{TemplateBinding Background}" />
                        <Path Data="{StaticResource Path.Triangle.Right}" Width="4" Height="5" Fill="White" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasBindError" Value="true">
                            <Setter TargetName="path" Property="Fill" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type el:ComponentBox}">
        <Setter Property="MaxHeight" Value="140"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="border" Padding="2" Background="Transparent">
                                    <Border x:Name="header" BorderBrush="{StaticResource Brush.Logic.Event}" BorderThickness="3,0,0,0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>

                                            <Image x:Name="icon" Visibility="Collapsed" Grid.Column="0" Source="{Binding Data, Converter={StaticResource Converter.ToolboxIcon}}" Width="20" Height="20"/>
                                            <TextBlock Grid.Column="1" Text="{Binding Title}" Margin="6,0,0,0" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding ComponentType}" Value="Component">
                                        <Setter TargetName="header" Property="BorderBrush" Value="{StaticResource Brush.Logic.Component}"/>
                                    </DataTrigger>
                                    
                                    <DataTrigger Binding="{Binding ComponentType}" Value="Instance">
                                        <Setter TargetName="icon" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="header" Property="BorderThickness" Value="0"/>
                                    </DataTrigger>
                                    
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="border" Property="Background" Value="#D7D7D7"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="border" Property="Background" Value="#C5C5C5" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type el:ComponentBox}">
                    <Border Padding="6">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0" Opacity="0.28" BlurRadius="6"/>
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Path x:Name="triangle" Grid.Column="0" Grid.Row="1" Data="{StaticResource Path.Triangle.Left}" Width="12" Height="12" Fill="White" Stretch="Fill"/>

                            <Border Grid.Column="1" Grid.Row="1" Padding="6" Background="White">
                                <Grid>
                                    <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                                                  Visibility="{TemplateBinding IsEmpty, Converter={StaticResource Converter.NotBoolToVisibility}}">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>

                                    <TextBlock Text="사용가능한 행동이 없습니다"
                                               Visibility="{TemplateBinding IsEmpty, Converter={StaticResource Converter.BoolToVisibility}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="PlaceDirection" Value="Left">
                            <Setter TargetName="triangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="triangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="triangle" Property="Data" Value="{StaticResource Path.Triangle.Left}"/>
                        </Trigger>

                        <Trigger Property="PlaceDirection" Value="Top">
                            <Setter TargetName="triangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="triangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="triangle" Property="Data" Value="{StaticResource Path.Triangle.Top}"/>
                        </Trigger>

                        <Trigger Property="PlaceDirection" Value="Right">
                            <Setter TargetName="triangle" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="triangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="triangle" Property="Data" Value="{StaticResource Path.Triangle.Right}"/>
                        </Trigger>

                        <Trigger Property="PlaceDirection" Value="Bottom">
                            <Setter TargetName="triangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="triangle" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="triangle" Property="Data" Value="{StaticResource Path.Triangle.Bottom}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>