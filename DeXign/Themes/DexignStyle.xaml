<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell"
                    xmlns:c="clr-namespace:DeXign.Controls"
                    xmlns:ex="clr-namespace:DeXign.Extension;assembly=DeXign.Extension"
                    xmlns:converter="clr-namespace:DeXign.Converter">

    <!-- Used 'XAML Region' Extension -->
    
    <!-- #region Converters -->
    <converter:RadiusConverter x:Key="RadiusConverter"/>
    <!-- #endregion -->
    
    <!-- #region Expander Style -->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="#D7D7D7" BorderThickness="0,1,0,0">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#F4F4F4" Offset="0"/>
                                    <GradientStop Color="#EAEAEA" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Path x:Name="arrow" Data="{StaticResource Path.TriangleUp}" Margin="23,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="#626262" SnapsToDevicePixels="true" />
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="{StaticResource Path.TriangleDown}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{x:Null}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <c:Separator LineBrush1="#DDDDDD" LineBrush2="#D8D8D8" DockPanel.Dock="Top" Height="2"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!-- #region Tab Style -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="BorderThickness" Value="0,2,0,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.DarkAccent}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:ClosableTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.TabItem.Foreground}"/>
        <Setter Property="Padding" Value="15,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="FontSize" Value="15"/>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" Opacity="0.4" BlurRadius="8"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource Brush.TabItem.Normal}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="contentBlock" Text="{TemplateBinding Header}" TextTrimming="CharacterEllipsis" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

                        <c:PathButton x:Name="btnClose" Visibility="Hidden" Grid.Column="1" Command="{x:Static c:ClosableTabItem.CloseCommand}" PathData="{StaticResource Path.CloseSmall}" Foreground="White" Width="12" Height="12" PathWidth="12" PathHeight="12" Margin="0,0,15,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Brush.TabItem.MouseOver}"/>
                            <Setter TargetName="btnClose" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentBlock" Value="0.56"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Brush.DarkAccent}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.Accent}"/>
                            <Setter TargetName="btnClose" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- #endregion -->
    
    <!-- #region Menu Style -->
    <Style x:Key="DexignMenuSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource Brush.Menu.Seperator}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Menu.Seperator}"/>
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:MenuItemEx}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" BorderThickness="1">
                        <Grid Height="22">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="Icon" Margin="6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                            <ContentPresenter x:Name="HeaderHost" Margin="8,0" Grid.Column="1" VerticalAlignment="Center" Content="{TemplateBinding Header}" RecognizesAccessKey="True" TextOptions.TextFormattingMode="Display" />
                            <ContentPresenter x:Name="PART_ShortCut" Grid.Column="2" Content="{TemplateBinding InputGestureText}" VerticalAlignment="Center" Margin="8,0" Visibility="Collapsed"/>

                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" Background="White" BorderThickness="1" BorderBrush="{StaticResource Brush.Accent}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource Brush.Accent.50}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Brush.Accent.50}"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="SubmenuBorder" Property="Padding" Value="3" />
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <!-- #endregion -->

    <!-- #region HeaderLayout Style -->
    <Style TargetType="{x:Type c:HeaderLayout}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:HeaderLayout}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <ContentPresenter Grid.Row="0" Content="{TemplateBinding Header}"/>
                        <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeXignHeaderLayoutStyle" TargetType="{x:Type c:HeaderLayout}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:HeaderLayout}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" Height="44" BorderThickness="0,0,0,0" BorderBrush="{StaticResource Brush.DarkAccent}" Background="{StaticResource Brush.ContentBackground}">
                            <TextBlock Text="{TemplateBinding Header}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0" Foreground="{StaticResource Brush.HeaderLayout.Foreground}" TextTrimming="CharacterEllipsis" FontSize="12" FontWeight="Bold"/>
                        </Border>

                        <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- #endregion -->
    
    <!-- #region ToolBox Style -->
    <Style x:Key="DeXignToolBoxItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.ToolBox.Item.Border}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}" Width="70" Height="76" Padding="0,8" ToolTip="{Binding ToolTip}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="39"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Border Grid.Row="0" CornerRadius="4" Background="{StaticResource Brush.ToolBox.Item.Fill}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Width="39">
                                <ContentPresenter Content="{Binding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>

                            <TextBlock Grid.Row="1" Text="{Binding Title}" HorizontalAlignment="Center" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" FontSize="12"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Selection Deactivated -->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#11000000" />
                        </Trigger>

                        <!-- Selection Activated -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Brush.Accent}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ItemsPanelTemplate x:Key="DeXignToolBoxItemsPanelTemplate">
        <WrapPanel Orientation="Horizontal" ex:ScrollViewerEx.SmoothScrollEnabled="True"/>
    </ItemsPanelTemplate>
    
    <Style TargetType="{x:Type c:ToolBox}">
        <Setter Property="Background" Value="#DFDFDF"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource DeXignToolBoxItemStyle}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource DeXignToolBoxItemsPanelTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ToolBox}">
                    <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- #endregion -->
    
    <!-- #region Controls Style -->
    <Style x:Key="SearchBarStyle" TargetType="{x:Type c:HintTextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#C0C0C0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:HintTextBox}">
                    <Border x:Name="border" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Path Data="{StaticResource Path.Search}" Stretch="Uniform" Fill="DimGray" Width="12" Height="12" VerticalAlignment="Center" Margin="4,0"/>

                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" VerticalAlignment="Center" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}"/>
                            <TextBlock x:Name="textHint" Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding TextHint}" Focusable="false" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" Opacity="0.56" Margin="6,0" IsHitTestVisible="False" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value=""/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="textHint" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type c:PathButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="PathHorizontalAlignment" Value="Center"/>
        <Setter Property="PathVerticalAlignment" Value="Center"/>
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PathButton}">
                    <Border x:Name="border" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="0" Padding="{TemplateBinding Padding}">
                        <Path SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding PathVerticalAlignment}" HorizontalAlignment="{TemplateBinding PathHorizontalAlignment}"
                              Width="{TemplateBinding PathWidth}" Height="{TemplateBinding PathHeight}"
                              Data="{TemplateBinding PathData}" Fill="{TemplateBinding Foreground}"
                              Stretch="Fill" IsHitTestVisible="False"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!-- 20% -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#44FFFFFF" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                            <ColorAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Transparent" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                            <ColorAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Accent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeXignGroupItemStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander IsExpanded="True">
                        <Expander.Header>
                            <TextBlock Text="{Binding Name}" Foreground="#595959" FontSize="12" VerticalAlignment="Center" />
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Rectangle x:Name="rectangle" 
                                                                       Margin="2"
                                                                       RadiusX="{Binding RelativeSource={RelativeSource AncestorType={x:Type Track}}, Converter={StaticResource RadiusConverter}}" 
                                                                       RadiusY="{Binding RelativeSource={RelativeSource AncestorType={x:Type Track}}, Converter={StaticResource RadiusConverter}}" 
                                                                       Fill="#55CDCDCD" SnapsToDevicePixels="True"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation To="#77A6A6A6" Duration="0:0:0.3" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                                                                <ColorAnimation.EasingFunction>
                                                                                    <CircleEase EasingMode="EaseOut"/>
                                                                                </ColorAnimation.EasingFunction>
                                                                            </ColorAnimation>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation To="#55CDCDCD" Duration="0:0:0.2" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                                                                <ColorAnimation.EasingFunction>
                                                                                    <CircleEase EasingMode="EaseOut"/>
                                                                                </ColorAnimation.EasingFunction>
                                                                            </ColorAnimation>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter Property="Fill" TargetName="rectangle" Value="#99606060"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Margin="2" HorizontalAlignment="Right" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Margin="2" VerticalAlignment="Bottom" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- #endregion -->
    
    <!-- #region Window Styles -->
    <!-- Control Box -->
    <Style TargetType="{x:Type c:ControlBox}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ControlBox}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                        <!-- Minimize Button -->
                        <c:PathButton x:Name="btnMinimize" PathData="{StaticResource Path.Minimize}" Command="{x:Static SystemCommands.MinimizeWindowCommand}" 
                                      Width="28" PathWidth="14" PathHeight="1" PathVerticalAlignment="Bottom" Foreground="White" Padding="7"/>

                        <!-- Maximize/Restore Button -->
                        <c:PathButton x:Name="btnMaximize" PathData="{StaticResource Path.Maximize}" Command="{x:Static SystemCommands.MaximizeWindowCommand}" 
                                      Width="28" PathWidth="14" PathHeight="14" Foreground="White"/>

                        <!-- Close Button -->
                        <c:PathButton x:Name="btnClose" PathData="{StaticResource Path.Close}" Command="{x:Static SystemCommands.CloseWindowCommand}" 
                                      Width="28" PathWidth="14" PathHeight="14" Foreground="White"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                            <Setter TargetName="btnMaximize" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}"/>
                            <Setter TargetName="btnMaximize" Property="PathData" Value="{StaticResource Path.Maximized}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TitleBar Separator Style -->
    <Style x:Key="DexignSeparatorStyle" TargetType="{x:Type c:Separator}">
        <Setter Property="LineBrush1" Value="{StaticResource Brush.Seperator1}"/>
        <Setter Property="LineBrush2" Value="{StaticResource Brush.Seperator2}"/>
    </Style>

    <!-- Undo/Redo Control Box Style -->
    <Style TargetType="{x:Type c:ActionControlBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="88"/>
        <Setter Property="Height" Value="36"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ActionControlBox}">
                    <UniformGrid Columns="2">
                        <c:PathButton PathData="{StaticResource Path.ArrowBack}" CornerRadius="18" Foreground="White" PathWidth="18" PathHeight="18"/>
                        <c:PathButton PathData="{StaticResource Path.ArrowNext}" CornerRadius="18" Foreground="White" PathWidth="18" PathHeight="18"/>
                    </UniformGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Style -->
    <Style x:Key="DexignWindowStyle" TargetType="{x:Type c:ChromeWindow}">
        <Setter Property="CaptionHeight" Value="44"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ChromeWindow}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <!-- Header -->
                        <Grid Background="{StaticResource Brush.Header}" Panel.ZIndex="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="44"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid.Effect>
                                <DropShadowEffect ShadowDepth="0" Opacity="0.4" BlurRadius="8"/>
                            </Grid.Effect>

                            <!-- Header - Caption Top -->
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Title -->
                                <TextBlock Grid.Column="0" Text="{TemplateBinding Title}" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="12,0" Foreground="{StaticResource Brush.Accent}"/>

                                <!-- Window Menu -->
                                <ContentPresenter Grid.Column="1" Margin="12,0,0,0" Content="{TemplateBinding Menu}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

                                <!-- Window Control Box -->
                                <c:ControlBox Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="7,0"/>
                            </Grid>

                            <c:Separator Grid.Row="1" Height="2" Margin="0,-1,0,1" SnapsToDevicePixels="True" VerticalAlignment="Top" Style="{DynamicResource DexignSeparatorStyle}"/>

                            <!-- Header - Work area -->
                            <Grid Grid.Row="1">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <c:ActionControlBox VerticalAlignment="Center" Margin="12,0"/>

                                    <c:Separator Width="2" Height="31" Style="{DynamicResource DexignSeparatorStyle}" Margin="4,0"/>
                                </StackPanel>
                            </Grid>
                        </Grid>

                        <!-- Content -->
                        <AdornerDecorator Grid.Row="1">
                            <ContentPresenter Content="{TemplateBinding Content}" SnapsToDevicePixels="True"/>
                        </AdornerDecorator>
                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- #endregion -->
    
</ResourceDictionary>