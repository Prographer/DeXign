<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:aero2="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:c="clr-namespace:DeXign.Controls"
    xmlns:local="clr-namespace:DeXign"
    xmlns:rule="clr-namespace:DeXign.Rules"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="clr-namespace:DeXign.UI;assembly=DeXign.UI">

    <!--  Used 'XAML Region' Extension  -->

    <!--#region Expander Style-->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource Brush.Expander.Header.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Expander.Seperator}" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,1"
                        SnapsToDevicePixels="True">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Path
                                x:Name="arrow"
                                Margin="23,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Data="{StaticResource Path.Triangle.Top}"
                                Fill="{StaticResource Brush.Expander.Header.Arrow.Background}"
                                SnapsToDevicePixels="true" />
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="{StaticResource Path.Triangle.Bottom}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource Brush.ToolBox.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{x:Null}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Tab Style-->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        x:Name="templateRoot"
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="headerPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Background="{StaticResource Brush.TabControl.Background}"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="contentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:ClosableTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource Brush.TabControl.Tab.Unselected.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.TabControl.Tab.Unselected.Foreground}" />
        <Setter Property="Padding" Value="15,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Height" Value="38" />
        <Setter Property="FontSize" Value="15" />

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="8"
                    Opacity="0.4"
                    ShadowDepth="0" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            x:Name="contentBlock"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Header}"
                            TextTrimming="CharacterEllipsis" />

                        <c:PathButton
                            x:Name="btnClose"
                            Grid.Column="1"
                            Width="12"
                            Height="12"
                            Margin="0,0,15,0"
                            Command="{x:Static c:ClosableTabItem.CloseCommand}"
                            Foreground="White"
                            PathData="{StaticResource Path.CloseSmall}"
                            PathHeight="12"
                            PathWidth="12"
                            Visibility="Hidden" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Brush.TabItem.Hover}" />
                            <Setter TargetName="btnClose" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentBlock" Property="Opacity" Value="0.56" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Brush.TabControl.Tab.Selected.Background}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush.TabControl.Tab.Selected.Foreground}" />
                            <Setter TargetName="btnClose" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Menu Style-->
    <Style x:Key="DexignMenuSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource Brush.Menu.Seperator}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Menu.Seperator}" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Margin="4,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:MenuItemEx}">
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{DynamicResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Foreground" Value="{StaticResource Brush.Menu.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="Red" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region HeaderLayout Style-->
    <Style TargetType="{x:Type c:HeaderLayout}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:HeaderLayout}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>

                        <ContentPresenter Grid.Row="0" Content="{TemplateBinding Header}" />
                        <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeXignHeaderLayoutStyle" TargetType="{x:Type c:HeaderLayout}">
        <Setter Property="Background" Value="{StaticResource Brush.HeaderLayout.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.HeaderLayout.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:HeaderLayout}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" Height="38">
                            <TextBlock
                                Margin="15,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="12"
                                FontWeight="Bold"
                                Text="{TemplateBinding Header}"
                                TextTrimming="CharacterEllipsis" />
                        </Border>

                        <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region PropertyGrid Style-->
    <Style TargetType="{x:Type c:PropertyGrid}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
        <Setter Property="Background" Value="{StaticResource Brush.PropertyGrid.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.PropertyGrid.Foreground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="BorderBrush" Value="{StaticResource Brush.Expander.Seperator}" />
                    <Setter Property="Background" Value="{StaticResource Brush.PropertyGrid.Setter.Background}" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                                    x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,1,0,0"
                                    SnapsToDevicePixels="True">
                                    <Grid
                                        Margin="4"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch">
                                        <GridViewRowPresenter
                                            Grid.RowSpan="2"
                                            Columns="{TemplateBinding GridView.ColumnCollection}"
                                            Content="{TemplateBinding Content}"
                                            Focusable="False" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                        <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.PropertyGrid.Setter.Hover}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="View">
            <Setter.Value>
                <GridView x:Name="gridView">
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>

                    <c:StarGridViewColumn StarWidth="1">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    FontSize="12"
                                    Foreground="{StaticResource Brush.PropertyGrid.Setter.Header.Foreground}"
                                    Text="{Binding Title}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{Binding Title}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </c:StarGridViewColumn>
                    <c:StarGridViewColumn StarWidth="1.7">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ContentPresenter
                                    Margin="0,0,16,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{Binding Setter}"
                                    Focusable="False" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </c:StarGridViewColumn>
                </GridView>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PropertyGrid}">
                    <DockPanel>
                        <Border
                            Padding="8"
                            Background="{StaticResource Brush.PropertyGrid.Setter.Background}"
                            DockPanel.Dock="Top"
                            TextBlock.Foreground="{StaticResource Brush.PropertyGrid.Setter.Header.Foreground}"
                            Visibility="{TemplateBinding DataContext,
                                                         Converter={StaticResource Converter.NullObjectToVisibility}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Image
                                    Height="32"
                                    Margin="0,0,16,0"
                                    Source="{TemplateBinding DataContext,
                                                             Converter={StaticResource Converter.ToolboxIcon}}"
                                    Visibility="{Binding Path=Source, RelativeSource={RelativeSource Self}, Converter={StaticResource Converter.NullObjectToVisibility}}" />

                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="8" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="4" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="형식" />
                                    <TextBlock
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="이름" />

                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        FontWeight="Bold"
                                        Foreground="#C4C4C4"
                                        Text="{TemplateBinding DataContext,
                                                               Converter={StaticResource Converter.DisplayName}}" />
                                    <c:SubmitTextBox
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        HorizontalAlignment="Stretch"
                                        Style="{StaticResource ValueBoxStyle}">
                                        <TextBox.Text>
                                            <Binding FallbackValue="&lt;이름 없음&gt;" Path="DataContext.Name">
                                                <Binding.RelativeSource>
                                                    <RelativeSource AncestorType="{x:Type c:PropertyGrid}" Mode="FindAncestor" />
                                                </Binding.RelativeSource>
                                                <Binding.ValidationRules>
                                                    <rule:NameScopeRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </c:SubmitTextBox>
                                </Grid>
                            </Grid>
                        </Border>
                        <c:HintTextBox
                            x:Name="PART_searchBox"
                            DockPanel.Dock="Top"
                            Style="{DynamicResource SearchBarStyle}"
                            TextHint="속성 검색"
                            Visibility="{TemplateBinding DataContext,
                                                         Converter={StaticResource Converter.NullObjectToVisibility}}" />
                        <ScrollViewer
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            DockPanel.Dock="Top"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Disabled">
                            <StackPanel>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </ScrollViewer>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ToolBox Style-->
    <Style TargetType="{x:Type c:ToolBoxItemView}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Width="70"
                        Height="88"
                        ToolTip="{Binding ToolTip}"
                        ToolTipService.InitialShowDelay="800">
                        <Border
                            x:Name="border"
                            Height="70"
                            Margin="4"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10">
                            <Grid VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <ContentPresenter
                                    x:Name="PART_contentPresenter"
                                    Grid.Row="0"
                                    Width="32"
                                    Height="32"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Content}" />

                                <TextBlock
                                    Grid.Row="1"
                                    Margin="0,6,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="12"
                                    Text="{Binding Title}"
                                    TextTrimming="CharacterEllipsis" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.ToolBox.Item.Hover}" />
                        </Trigger>

                        <!--  Selection Deactivated  -->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.ToolBox.Item.Down}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="DeXignToolBoxItemsPanelTemplate">
        <WrapPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>

    <Style TargetType="{x:Type c:ToolBox}">
        <Setter Property="Background" Value="{StaticResource Brush.ToolBox.Background}" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="ItemsPanel" Value="{StaticResource DeXignToolBoxItemsPanelTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ToolBox}">
                    <ScrollViewer
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        Focusable="False">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ResolutionComboBox Style-->
    <DataTemplate x:Key="ResolutionItemTemplate">
        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Width="25"
                    Height="25"
                    Margin="1">
                    <Line
                        Stroke="LightGray"
                        StrokeThickness="1"
                        X1="0"
                        X2="7"
                        Y1="0"
                        Y2="7" />
                    <Line
                        Stroke="LightGray"
                        StrokeThickness="1"
                        X1="25"
                        X2="18"
                        Y1="0"
                        Y2="7" />
                    <Line
                        Stroke="LightGray"
                        StrokeThickness="1"
                        X1="0"
                        X2="7"
                        Y1="25"
                        Y2="18" />
                    <Line
                        Stroke="LightGray"
                        StrokeThickness="1"
                        X1="25"
                        X2="18"
                        Y1="25"
                        Y2="18" />

                    <Border BorderBrush="Black" BorderThickness="1">
                        <Border BorderBrush="Gray" BorderThickness="1">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="10"
                                Text="{Binding Inch}" />
                        </Border>
                    </Border>
                </Grid>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="2"
                    VerticalAlignment="Bottom"
                    FontSize="12"
                    Text="{Binding Title}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    VerticalAlignment="Top"
                    FontSize="10"
                    Opacity="0.56"
                    Text="{Binding SubTitle}" />
            </Grid>
        </Border>
    </DataTemplate>

    <Style x:Key="ResolutionComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="splitBorder"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            Margin="0"
                            HorizontalAlignment="Right"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                            <Path
                                x:Name="arrow"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource Path.Triangle.Bottom}"
                                Fill="LightGray" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="arrow" Property="Fill" Value="White" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Brush.Accent.50}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Brush.Accent}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ResolutionComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <aero2:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </aero2:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ResolutionComboBoxToggleButtonStyle}" />
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextBlock.Foreground="White" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ResolutionComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ResolutionComboBoxTemplate}" />
    </Style>
    <!--#endregion-->

    <!--#region Cell Style-->
    <Style TargetType="{x:Type c:ContentCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ContentCell}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Bullet" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding HeaderVerticalAlignment}"
                            Text="{TemplateBinding Header}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="16,0,0,0"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type c:ContentCell}}" TargetType="{x:Type c:TextCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TextCell}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Bullet" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding HeaderVerticalAlignment}"
                            Text="{TemplateBinding Header}" />
                        <TextBox
                            x:Name="PART_textBox"
                            Grid.Column="1"
                            Margin="16,0,0,0"
                            Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type c:TextCell}}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:CheckBoxCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:CheckBoxCell}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Bullet" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding HeaderVerticalAlignment}"
                            Text="{TemplateBinding Header}" />
                        <CheckBox
                            Grid.Column="1"
                            Margin="16,0,0,0"
                            Content="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type c:CheckBoxCell}}}"
                            IsChecked="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type c:CheckBoxCell}}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Controls Style-->
    <Style TargetType="{x:Type c:ZoomPanel}">
        <Setter Property="ClipToBounds" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ZoomPanel}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ui:ImageBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:ImageBox}">
                    <Grid>
                        <Path
                            HorizontalAlignment="Center"
                            Data="{StaticResource Path.DefaultImage}"
                            Fill="LightGray"
                            Stretch="Uniform"
                            Visibility="{TemplateBinding Source,
                                                         Converter={StaticResource Converter.NotNullObjectToVisibility}}" />
                        <Image
                            x:Name="img"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Source="{TemplateBinding Source}"
                            Stretch="{TemplateBinding Stretch}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Stretch" Value="UniformToFill">
                            <Setter TargetName="img" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="img" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:LabelEx}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:LabelEx}">
                    <Grid Background="{TemplateBinding Background}">
                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{TemplateBinding Content}"
                            TextTrimming="CharacterEllipsis" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:LinkTextBlock}">
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type c:RecentFileTextBlock}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:RecentFileTextBlock}">
                    <Border Padding="6">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Ellipse
                                Width="4"
                                Height="4"
                                Margin="2,0,6,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Fill="White" />
                            <TextBlock
                                x:Name="title"
                                Grid.Column="1"
                                Foreground="White"
                                Text="{TemplateBinding Title}"
                                TextTrimming="CharacterEllipsis" />
                            <TextBlock
                                x:Name="subTitle"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Margin="0,4,0,0"
                                Foreground="#6a6a6a"
                                Text="{TemplateBinding SubTitle}"
                                TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="title" Property="TextDecorations" Value="Underline" />
                            <Setter TargetName="subTitle" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EnumRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="Transparent" ClipToBounds="True">
                        <Grid Margin="{TemplateBinding Margin}">
                            <Rectangle
                                x:Name="rect"
                                Fill="Transparent"
                                RadiusX="4"
                                RadiusY="4" />

                            <Border>
                                <ContentPresenter Content="{TemplateBinding Content}" SnapsToDevicePixels="True" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rect" Property="Fill" Value="#555555" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="rect" Property="Fill" Value="#6A6A6A" />
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="2" Duration="0:0:0.3" Storyboard.TargetName="rect" Storyboard.TargetProperty="StrokeThickness">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="rect" Storyboard.TargetProperty="StrokeThickness">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PathRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="Transparent" ClipToBounds="True">
                        <Grid>
                            <Rectangle
                                x:Name="rect"
                                Stroke="{StaticResource Brush.Flat.Accent.Light}"
                                StrokeThickness="0" />

                            <Border Padding="{TemplateBinding Padding}">
                                <c:StrokePath
                                    Data="{TemplateBinding Content}"
                                    Fill="{TemplateBinding Foreground}"
                                    Stretch="Uniform" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="rect"
                                            Storyboard.TargetProperty="StrokeThickness"
                                            To="3"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="rect"
                                            Storyboard.TargetProperty="StrokeThickness"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchBarStyle" TargetType="{x:Type c:HintTextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource Brush.SearchBar.Background}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.SearchBar.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.SearchBar.Border}" />
        <Setter Property="SelectionBrush" Value="{StaticResource Brush.SearchBar.Foreground}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="BorderThickness" Value="0,1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:HintTextBox}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid x:Name="grid" Margin="8,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Path
                                Width="12"
                                Height="12"
                                Margin="4,0"
                                VerticalAlignment="Center"
                                Data="{StaticResource Path.Search}"
                                Fill="{StaticResource Brush.SearchBar.Icon.Background}"
                                Stretch="Uniform" />

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Focusable="false"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                            <TextBlock
                                x:Name="textHint"
                                Grid.Column="1"
                                Margin="6,0"
                                VerticalAlignment="Center"
                                Focusable="false"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                Opacity="0.56"
                                Text="{TemplateBinding TextHint}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="textHint" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="grid" Property="Margin" Value="6,-1,0,-1" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Flat.Accent.DeepDark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimpleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        BorderThickness="0">
                        <ContentPresenter SnapsToDevicePixels="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#878787" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#F4BB24" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:PathButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="PathHorizontalAlignment" Value="Center" />
        <Setter Property="PathVerticalAlignment" Value="Center" />
        <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PathButton}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        BorderThickness="0"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Path
                            Width="{TemplateBinding PathWidth}"
                            Height="{TemplateBinding PathHeight}"
                            HorizontalAlignment="{TemplateBinding PathHorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding PathVerticalAlignment}"
                            Data="{TemplateBinding PathData}"
                            Fill="{TemplateBinding Foreground}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="True"
                            Stretch="Fill" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#878787" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Flat.Accent.DeepDark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeXignGroupItemStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander
                        Padding="0"
                        Background="{StaticResource Brush.ToolBox.Group.Background}"
                        IsExpanded="True">
                        <Expander.Header>
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="12"
                                Foreground="{StaticResource Brush.ToolBox.Foreground}"
                                Text="{Binding Name}" />
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                        <Track
                            x:Name="PART_Track"
                            IsDirectionReversed="True"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle
                                                            Width="{TemplateBinding Width}"
                                                            Height="{TemplateBinding Height}"
                                                            Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle
                                                            Width="{TemplateBinding Width}"
                                                            Height="{TemplateBinding Height}"
                                                            Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <c:RectangleEx
                                                            x:Name="rectangle"
                                                            Margin="2"
                                                            Fill="#55CDCDCD"
                                                            Radius="100"
                                                            SnapsToDevicePixels="True" />
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation
                                                                                Storyboard.TargetName="rectangle"
                                                                                Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)"
                                                                                To="#77A6A6A6"
                                                                                Duration="0:0:0.3">
                                                                                <ColorAnimation.EasingFunction>
                                                                                    <CircleEase EasingMode="EaseOut" />
                                                                                </ColorAnimation.EasingFunction>
                                                                            </ColorAnimation>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation
                                                                                Storyboard.TargetName="rectangle"
                                                                                Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)"
                                                                                To="#55CDCDCD"
                                                                                Duration="0:0:0.2">
                                                                                <ColorAnimation.EasingFunction>
                                                                                    <CircleEase EasingMode="EaseOut" />
                                                                                </ColorAnimation.EasingFunction>
                                                                            </ColorAnimation>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>

                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter TargetName="rectangle" Property="Fill" Value="#99606060" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">12</sys:Double>
                            <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">12</sys:Double>
                        </Grid.Resources>
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Margin="2"
                            HorizontalAlignment="Right"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Margin="2"
                            VerticalAlignment="Bottom"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ui:ProtrudedScrollViewer}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:ProtrudedScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Margin="2"
                            HorizontalAlignment="Right"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Margin="2"
                            VerticalAlignment="Bottom"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Window Styles-->
    <!--  Control Box  -->
    <Style TargetType="{x:Type c:RoundButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:RoundButton}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding MouseOverBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding MouseDownBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlight" Value="true" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding HighlightBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:ControlBox}">
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ControlBox}">
                    <StackPanel VerticalAlignment="Stretch" Orientation="Horizontal">
                        <!--  Minimize Button  -->
                        <c:PathButton
                            x:Name="btnMinimize"
                            Width="28"
                            Padding="7"
                            Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                            Foreground="White"
                            PathData="{StaticResource Path.Minimize}"
                            PathHeight="1"
                            PathVerticalAlignment="Bottom"
                            PathWidth="14" />

                        <!--  Maximize/Restore Button  -->
                        <c:PathButton
                            x:Name="btnMaximize"
                            Width="28"
                            Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                            Foreground="White"
                            PathData="{StaticResource Path.Maximize}"
                            PathHeight="14"
                            PathWidth="14" />

                        <!--  Close Button  -->
                        <c:PathButton
                            x:Name="btnClose"
                            Width="28"
                            Command="{x:Static SystemCommands.CloseWindowCommand}"
                            Foreground="White"
                            PathData="{StaticResource Path.Close}"
                            PathHeight="14"
                            PathWidth="14" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                            <Setter TargetName="btnMaximize" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}" />
                            <Setter TargetName="btnMaximize" Property="PathData" Value="{StaticResource Path.Maximized}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TitleBar Separator Style  -->
    <Style x:Key="DexignSeparatorStyle" TargetType="{x:Type c:Separator}">
        <Setter Property="LineBrush1" Value="{StaticResource Brush.Window.Header.Seperator1}" />
        <Setter Property="LineBrush2" Value="{StaticResource Brush.Window.Header.Seperator2}" />
    </Style>

    <!--  Undo/Redo Control Box Style  -->
    <Style TargetType="{x:Type c:TaskNavigationBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TaskNavigationBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <c:PathButton
                            x:Name="undoButton"
                            Grid.Column="0"
                            Padding="12,6"
                            Command="{Binding TaskManager.UndoCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="15"
                            Foreground="White"
                            IsEnabled="false"
                            Opacity="0.5"
                            PathData="{StaticResource Path.ArrowBack}"
                            PathHeight="18"
                            PathWidth="18" />
                        <c:PathButton
                            x:Name="redoButton"
                            Grid.Column="2"
                            Padding="12,6"
                            Command="{Binding TaskManager.RedoCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="15"
                            Foreground="White"
                            IsEnabled="false"
                            Opacity="0.5"
                            PathData="{StaticResource Path.ArrowNext}"
                            PathHeight="18"
                            PathWidth="18" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="CanUndo" Value="true">
                            <Setter TargetName="undoButton" Property="Opacity" Value="1" />
                            <Setter TargetName="undoButton" Property="IsEnabled" Value="true" />
                        </Trigger>
                        <Trigger Property="CanRedo" Value="true">
                            <Setter TargetName="redoButton" Property="Opacity" Value="1" />
                            <Setter TargetName="redoButton" Property="IsEnabled" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Window Style  -->
    <Style x:Key="DexignWindowStyle" TargetType="{x:Type c:ChromeWindow}">
        <Setter Property="CaptionHeight" Value="44" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ChromeWindow}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="82" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!--  Header  -->
                        <Grid Panel.ZIndex="1" Background="{StaticResource Brush.Window.Header.Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="2" />
                                <RowDefinition Height="40" />
                            </Grid.RowDefinitions>

                            <Grid.Effect>
                                <DropShadowEffect
                                    BlurRadius="15"
                                    Opacity="0.2"
                                    ShadowDepth="0"
                                    Color="Black" />
                            </Grid.Effect>

                            <!--  Header - Caption Top  -->
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!--  Title  -->
                                <!--<TextBlock Grid.Column="0" Text="{TemplateBinding Title}" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="12,0" Foreground="{StaticResource Brush.Accent}"/>-->
                                <Image
                                    Grid.Column="0"
                                    Width="20"
                                    Height="20"
                                    Margin="25,0,0,0"
                                    VerticalAlignment="Center"
                                    Source="/DeXign;component/Resources/Images/Logo.png" />

                                <!--  Window Menu  -->
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Menu}" />

                                <!--  Window Control Box  -->
                                <c:ControlBox
                                    Grid.Column="2"
                                    Margin="7,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Stretch" />
                            </Grid>

                            <c:Separator
                                Grid.Row="1"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True"
                                Style="{DynamicResource DexignSeparatorStyle}" />

                            <!--  Header - Work area  -->
                            <StackPanel
                                Grid.Row="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <c:TaskNavigationBox
                                    x:Name="PART_taskNavigationBox"
                                    Margin="13,0"
                                    VerticalAlignment="Center"
                                    IsEnabled="{Binding IsDebugging, Converter={StaticResource Converter.Not}, Source={x:Static local:GlobalModel.Instance}}"
                                    TaskManager="{Binding StoryboardPage.Model.TaskManager}" />

                                <c:Separator
                                    Width="2"
                                    Height="22"
                                    Margin="0,0,25,0"
                                    Style="{DynamicResource DexignSeparatorStyle}" />

                                <ContentPresenter
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding SubMenu}" />
                            </StackPanel>
                        </Grid>

                        <!--  Content  -->
                        <AdornerDecorator Grid.Row="1">
                            <ContentPresenter Content="{TemplateBinding Content}" SnapsToDevicePixels="True" />
                        </AdornerDecorator>
                    </Grid>

                    <!--  Triggers  -->
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Flat Style-->
    <!--#region Flat Slider Style-->
    <Style x:Key="FlatSliderRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Height="1" Fill="#979797" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatSliderRepeatButton1" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Height="1"
                        Fill="{StaticResource Brush.Flat.Accent}"
                        SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatSliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Width="13"
                        Height="13"
                        Fill="Transparent"
                        Stroke="{StaticResource Brush.Flat.Accent}"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
                                        Margin="0,0,0,0"
                                        Command="Slider.DecreaseLarge"
                                        Style="{StaticResource FlatSliderRepeatButton1}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource FlatSliderThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
                                        Margin="0,0,0,0"
                                        Command="Slider.IncreaseLarge"
                                        Style="{StaticResource FlatSliderRepeatButton}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style x:Key="FlatCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="border"
                            Grid.Column="0"
                            Width="16"
                            Height="16"
                            Background="#3F3F3F"
                            BorderBrush="#5B5B5B"
                            BorderThickness="1">
                            <Path
                                x:Name="path"
                                Width="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource Path.Check}"
                                Fill="#4C4C4C"
                                Stretch="Uniform" />
                        </Border>

                        <ContentPresenter
                            Grid.Column="1"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Flat.Accent.Dark}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Flat.Accent.Light}" />
                            <Setter TargetName="path" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Flat.Accent.Light}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="#343434" />
                            <Setter TargetName="border" Property="Background" Value="#3F3F3F" />
                            <Setter TargetName="path" Property="Fill" Value="#343434" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatContentCellStyle" TargetType="{x:Type c:ContentCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#B7B7B7" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ContentCell}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Bullet" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding HeaderVerticalAlignment}"
                            Text="{TemplateBinding Header}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="16,0,0,0"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatTextCellStyle" TargetType="{x:Type c:TextCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#B7B7B7" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TextCell}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Bullet" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding HeaderVerticalAlignment}"
                            Text="{TemplateBinding Header}" />
                        <TextBox
                            x:Name="PART_textBox"
                            Grid.Column="1"
                            Margin="16,0,0,0"
                            Style="{DynamicResource FlatTextBoxStyle}"
                            Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type c:TextCell}}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="#5B5B5B" />
        <Setter Property="SelectionBrush" Value="{StaticResource Brush.Flat.Accent}" />
        <Setter Property="Background" Value="{StaticResource Brush.Flat.Input.Background}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Flat.Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FlatButtonStyle"
        BasedOn="{StaticResource {x:Type c:RoundButton}}"
        TargetType="{x:Type c:RoundButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="TextBlock.Foreground" Value="White" />
        <Setter Property="TextBlock.FontSize" Value="12" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="CornerRadius" Value="4" />

        <Setter Property="BorderBrush" Value="#6b6b6b" />
        <Setter Property="Background" Value="#4C4C4C" />
        <Setter Property="MouseOverBrush" Value="#626262" />
        <Setter Property="MouseDownBrush" Value="#3C3C3C" />
        <Setter Property="HighlightBrush" Value="{StaticResource Brush.Flat.Accent}" />
    </Style>

    <Style x:Key="FlatWindowStyle" TargetType="{x:Type c:ChromeWindow}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CaptionHeight" Value="50" />
        <Setter Property="FontFamily" Value="{StaticResource Font.NotoSans.Thin}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ChromeWindow}">
                    <Border>
                        <Border
                            Margin="20"
                            shell:WindowChrome.IsHitTestVisibleInChrome="False"
                            Background="{StaticResource Brush.Flat.Background}"
                            CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="20"
                                    Opacity="0.4"
                                    ShadowDepth="0" />
                            </Border.Effect>

                            <Grid>
                                <c:RoundButton
                                    Width="25"
                                    Height="25"
                                    Margin="20"
                                    Padding="0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{x:Static SystemCommands.CloseWindowCommand}"
                                    CornerRadius="12.5"
                                    Style="{StaticResource FlatButtonStyle}">
                                    <Path
                                        Width="15"
                                        Height="15"
                                        Data="{StaticResource Path.Close}"
                                        Fill="#B1B1B1"
                                        IsHitTestVisible="False"
                                        Stretch="Fill" />
                                </c:RoundButton>

                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>